configurations.all {
    resolutionStrategy {
        failOnVersionConflict()
        force "org.slf4j:slf4j-api:1.7.24"
    }
}

allprojects {
    apply plugin: 'java'
    sourceCompatibility = 1.8

    apply plugin: "maven-publish"

    publishing {
        publications {
            myPublish(MavenPublication) {
                from components.java
            }
        }

        repositories {
            maven {
                name "myRepo"
                url ""
            }
        }
    }
}

subprojects {

    repositories {
        mavenCentral()
    }

    dependencies {
        testCompile group: 'junit', name: 'junit', version: '4.12'
        compile 'com.hynnet:logback-classic:1.1.3'
    }
}

/**
 * 解决依赖冲突的三种方式：排除低版本、强制指定一个版本
 */
dependencies {
//    testCompile group: 'junit', name: 'junit', version: '4.12'
//    compile 'com.hynnet:logback-classic:1.1.3'
//    compile('org.hibernate:hibernate-core:3.6.3.Final') {
//        exclude group: "org.slf4j", module: "slf4j-api"
//    }
}

def createDir = { path ->
    File dir = new File(path)
    if (!dir.exists()) {
        dir.mkdirs()
    }
}

task makeJavaDri() {
    def paths = ["src/main/java", "src/main/resources", "src/test/java", "src/test/resources"]
    doFirst {
        paths.forEach(createDir)
    }
}
task makeWebDri() {
    dependsOn 'makeJavaDri'
    def paths = ["src/main/webapp/WEB-INF", "src/main/webapp/META-INF"]
    doLast {
        paths.forEach(createDir)
    }
}